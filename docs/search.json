[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Diseño Experimental y análisis de Datos",
    "section": "",
    "text": "Esta es la página web del curso Diseño experimental y análisis de datos, para el año 2022.\n\n\n\nJorge Valdes (jorge.valdes@unab.cl)\nJuan Ugalde (juan.ugalde@unab.cl)\n\nEste curso se dicta todos los días Miercoles en los modulos 7-12 (entre las 14:00 - 18:25hrs).\nEsta página contiene el material práctico que iremos desarrollando en el curso, principalmente en la exploración y visualización de datos.\nBienvenidos!!!!!!!"
  },
  {
    "objectID": "A_introR.html",
    "href": "A_introR.html",
    "title": "Introducción a R",
    "section": "",
    "text": "R es un lenguaje de programación el cual permite hacer análisis estadisticos, manipular datos y generar visualizaciones. Es un lenguaje que permite ir desde una tabla cruda hasta llegar a visualizaciones complejas e incluso dashboards. R es un software de libre acceso con una comunidad que esta constantemente generando nuevas funcionalidades.\nRStudio es la forma más popular (pero no es la única!) para trabajar con R, escribir scripts, realizar visualizacionees, entre otras tareas. La ventaja es que hace el uso de R mucho fácil e interactivo, ademas de facilitar otras tareas como escribir reportes e incluso paginas web (como la de este curso!). RStudio esta disponible para Linux, MacOS y Windows.\nLo primero que haremos sera instalar R y RStudio si áun no los tienen, y veremos algunos detalles simples de su configuración."
  },
  {
    "objectID": "A1_intro_config.html",
    "href": "A1_intro_config.html",
    "title": "1  Configuración de R y RStudio",
    "section": "",
    "text": "Lo primero que es necesario hacer es instalar R y RStudio, en ese orden!\nNota para usuarios de MacOS\nAntes de instalar R, la recomendación es instalar primero Xcode y XQuartz."
  },
  {
    "objectID": "A1_intro_config.html#instalar-r",
    "href": "A1_intro_config.html#instalar-r",
    "title": "1  Configuración de R y RStudio",
    "section": "1.1 Instalar R",
    "text": "1.1 Instalar R\nR se puede descargar desde la pagina del Comprehensive R Archive Network o CRAN. Desde ese lugar se puede descargar la version de R e instalar según su sistema operativo."
  },
  {
    "objectID": "A1_intro_config.html#instalar-rstudio",
    "href": "A1_intro_config.html#instalar-rstudio",
    "title": "1  Configuración de R y RStudio",
    "section": "1.2 Instalar RStudio",
    "text": "1.2 Instalar RStudio\nEn la página de descarga de RStudio, elegir la versión según el sistema operativo que esten utilizando."
  },
  {
    "objectID": "A1_intro_config.html#resolver-problemas",
    "href": "A1_intro_config.html#resolver-problemas",
    "title": "1  Configuración de R y RStudio",
    "section": "1.3 Resolver problemas",
    "text": "1.3 Resolver problemas\nTanto R como RStudio tiene paginas web en donde se pueden encontrar respuestas a algunas preguntas. En el caso de R estan “Frequently Asked Questions”(FAQ) de R, o para Windows R for Windows FAQ.\nOtra fuente de información son paginas web y foros como Stack Overflow RStudio community. Sin embargo, lo más probable es que tus dudas ya se encuentren resueltas en la web, asi que primero haz una búsqueda en Google usando palabras clave o copia y pega en el buscador el mensaje de error que te aparezca en la consola de R. Consejo: haz tus búsquedas y consultas en inglés, tendrás acceso a más y mejor información."
  },
  {
    "objectID": "A2_intro_env.html",
    "href": "A2_intro_env.html",
    "title": "2  Configuración del ambiente de trabajo en R",
    "section": "",
    "text": "En R puedes hacer operaciones básicas como una suma o división simplemente escribiendo la instrucción en la consola, e.g.,27 + 4, 3 / 4. Para hacer cálculos más complejos como calcular la mediana de un set de datos o leer una tabla de valores, usamos funciones que son programas predeterminados en R. Así mismo, para cálculos aún más complejos como hacer un análisis de expresión diferencial de genes o generar un gráfico, usamos paquetes que son un amplio conjunto de funciones preprogramadas que permiten hacer este tipo de análisis sin necesidad de tener habilidades de programación."
  },
  {
    "objectID": "A2_intro_env.html#instalar-y-cargar-paquetes-en-r",
    "href": "A2_intro_env.html#instalar-y-cargar-paquetes-en-r",
    "title": "2  Configuración del ambiente de trabajo en R",
    "section": "2.1 Instalar y cargar paquetes en R",
    "text": "2.1 Instalar y cargar paquetes en R\nUna de las grandes ventajas de R es que existen numerosos paquetes que permiten agregar funcionalidades adicionales al lenguaje, incluyendo análisis de secuencias, herramientas avanzadas de visualización, etc.\nLos principales repositorios de paquetes son: CRAN, Bioconductor, y GitHub. Durante este curso vamos a ir utilizando diferentes paquetes que vamos a ir instalando. A modo de ejemplo estas son las instrucciones para instalar el paquete tidyverse, para manipular tablas y realizar gráicos.\ninstall.packages(\"tidyverse\")\nUna vez instalado, cada vez que vayamos a utilizar este paquete, al inicio de la sesión o el script, escribimos\nlibrary(tidyverse)"
  },
  {
    "objectID": "A2_intro_env.html#definir-directorio-de-trabajo",
    "href": "A2_intro_env.html#definir-directorio-de-trabajo",
    "title": "2  Configuración del ambiente de trabajo en R",
    "section": "2.2 Definir directorio de trabajo",
    "text": "2.2 Definir directorio de trabajo\nCada vez que se abre una nueva sesión de R, lo segundo que debemos hacer (después de cargar los paquetes necesarios) es definir el directorio de trabajo en nuestra computadora.\nPara esto lo ideal es definir una carpeta de trabajo (por ejemplo MCV502), y dirigir a RStudio a utilizar esta carpeta como lugar de trabajo.\nRStudio:\n\nAbre RStudio y dirígete a la pestaña Files.\nNavega por los directorios de tu computador hasta la ubicación de la carpeta que hayas definido (por ejemplo MCV502)\nSelecciona la carpeta, una vez dentro puedes definirla como tu directorio de trabajo. Para ello, haz clic en More -> Set As Working Directory."
  },
  {
    "objectID": "A3_tidyverse.html",
    "href": "A3_tidyverse.html",
    "title": "3  Intro a Tidyverse",
    "section": "",
    "text": "Antes de empezar cualquier analisis, especialmente si estamos iniciando un script desde cero, tenemos que llamar a las librerias que vamos a utilizar. Como estuvimos viendo durante la clase, la libreria que vamos a utilizar es tidyverse, la cual cargamos con el siguiente comando:\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nPrimero vamos a explorar un set de datos que ya viene incluido en la libreria, y que tiene valores de eficiencia de combustible para diferentes modelos de automoviles\n\n# Asignmamos la tabla mpg a una nueva variable que vamos a llamar\n# tabla_mpg\ntabla_mpg = mpg\n\nPodemos ver el contenido de la tabla y el tipo de variables escribiendo.\n\ntabla_mpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# … with 224 more rows\n\n\nPodemos ver que tiene varias columnas con distintas caracteristicas en donde:\n\nchr, indica caracteres\ndbl, números reales\nint, números enteros\ndttm, fecha y hora (en esta tabla de ejemplo no tenemos ese tipo de datos)"
  },
  {
    "objectID": "A3_tidyverse.html#funciones-mas-comunes-para-filtrar-tablas",
    "href": "A3_tidyverse.html#funciones-mas-comunes-para-filtrar-tablas",
    "title": "3  Intro a Tidyverse",
    "section": "3.2 Funciones mas comunes para filtrar tablas",
    "text": "3.2 Funciones mas comunes para filtrar tablas\nAlgunas de las funciones más comunes en el paquete de análisis son:\n\nselect(): extraer columnas.\nfilter(): extraer filas según condiciones.\nmutate(): crear nuevas columnas usando la información de otras columnas.\ngroup_by() y summarize(): cálcula estadísticas en datos agrupados.\ncount(): conteo de datos.\n\n\n3.2.1 Filtrando por columnas\nUna de las primeras cosas que podemos hacer es filtrar la tabla por algún valor en alguna de columna de interés. Para esto ocupamos el comando filter\n\n# En este caso estamos filtrando la tabla_mpg, en donde la columna year sea menor al año 2000\nfilter(tabla_mpg, year < 2000)\n\n# A tibble: 117 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 4 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 5 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 6 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n 7 audi         a4 quattro   2.8  1999     6 auto… 4        15    25 p     comp…\n 8 audi         a4 quattro   2.8  1999     6 manu… 4        17    25 p     comp…\n 9 audi         a6 quattro   2.8  1999     6 auto… 4        15    24 p     mids…\n10 chevrolet    c1500 sub…   5.7  1999     8 auto… r        13    17 r     suv  \n# … with 107 more rows\n\n\nTambien podemos elegir un rango de años\n\nfilter(tabla_mpg, year < 2000 | year > 2007)\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# … with 224 more rows\n\n\nAdemas de estar introduciendo la función de filtro (filter), también estamos viendo como podemos hacer busquedas por ciertos patrones. Por ejemplo:\n\nyear < 2000: En este caso el valor de year es menor a 2000\nEl simbolo | indica que son dos posibles condiciones. En el ejemplo anterior tenemos que sea menor al año 2000 o mayor al año 2007.\nEl simbolo & indica que se tienen que cumplir todas las condiciones. Por ejemplo:\n\n\nfilter(tabla_mpg,\n       (year < 2000 | year > 2007) & model == \"a4\"\n)\n\n# A tibble: 7 × 11\n  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n  <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\n4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…\n5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…\n6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…\n7 audi         a4      3.1  2008     6 auto(av)   f        18    27 p     compa…\n\n\nEn este caso estamos aplicando dos filtros. Que el año sea menor al 2000 y mayor al 2007, y que el modelo sea igual a a4. El parentesis es muy importante, porque agrupa las condiciones a filtrar.\n\n\n3.2.2 Seleccionando columnas\nTambien podemos seleccionar columnas de interes, luego de aplicar algún filtro (o viceversa). Por ejemplo:\n\nfilter(tabla_mpg,\n       (year < 2000 | year > 2007) & manufacturer == \"audi\") %>%\n  select(model, year)\n\n# A tibble: 18 × 2\n   model       year\n   <chr>      <int>\n 1 a4          1999\n 2 a4          1999\n 3 a4          2008\n 4 a4          2008\n 5 a4          1999\n 6 a4          1999\n 7 a4          2008\n 8 a4 quattro  1999\n 9 a4 quattro  1999\n10 a4 quattro  2008\n11 a4 quattro  2008\n12 a4 quattro  1999\n13 a4 quattro  1999\n14 a4 quattro  2008\n15 a4 quattro  2008\n16 a6 quattro  1999\n17 a6 quattro  2008\n18 a6 quattro  2008\n\n\nEn este caso estamos filtrando por el año y el fabricante, y luego seleccionando dos columnas, el modelo y año.\nAdicionalmente ocupamos el simbolo %>%, para hacer operaciones consecutivas utilizando pipes. De esta manera el output de una función (el filtro) es el input de la siguiente (select).\nEsto nos permite concatenar diferentes pasos de filtrado, agrupar, selección, etc, en un solo comando."
  }
]